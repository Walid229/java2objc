# Provides mappings from Java types to Objective C types.
# These are used by imports, variable declarations, etc.
#
# After the Objective C type name you can optionally add an
# additional type, one of class, protocol, struct or
# function.  The default is class.  Functions must come
# after their class definitions, if any.

void=void, struct

id=id
T=id
U=id

java.lang.Object=NSObject
Object.equals=NSObject.isEqualTo, function
Object.hashCode=NSObject.hash, function
Object.toString=NSObject.description, function
Object.clone=NSObject.copyWithZone, function

boolean=BOOL, struct
byte=char, struct
short=short, struct
char=unichar, struct
int=int, struct
long=long, struct
float=float, struct
double=double, struct

java.lang.Boolean=NSNumber
java.lang.Byte=NSNumber
java.lang.Short=NSNumber
java.lang.Character=NSNumber
java.lang.Integer=NSNumber
java.lang.Long=NSNumber
java.lang.Float=NSNumber
java.lang.Double=NSNumber
java.math.BigDecimal=NSDecimalNumber
java.lang.Number=NSNumber

java.lang.String=NSString
String.valueOf=NSString.stringWithFormat, function
String.equals=NSString.isEqualToString, function
String.charAt=NSString.characterAtIndex, function
String.getChars=NSString.getCharacters, function
String.compareTo=NSString.compare, function
String.compareToIgnoreCase=NSString.caseInsensitiveCompare, function
String.startsWith=NSString.hasPrefix, function
String.endsWith=NSString.hasSuffix, function
String.indexOf=NSString.rangeOfString, function
String.substring=NSString.substringFromIndex, function
String.subSequence=NSString.substringWithRange, function
String.concat=NSString.stringByAppendingString, function
String.replace=NSString.stringByReplacingCharactersInRange, function
String.replaceFirst=NSString.stringByReplacingOccurrencesOfString, function
String.replaceAll=NSString.stringByReplacingOccurrencesOfString, function
String.split=NSString.componentsSeparatedByString, function
String.toLowerCase=NSString.lowercaseString, function
String.toUpperCase=NSString.uppercaseString, function
String.trim=NSString.stringByTrimmingCharactersInSet, function
String.format=NSString.stringWithFormat, function

java.lang.reflect.Array=NSArray
Array.length=NSArray.count, function

java.lang.Throwable=NSException
java.lang.Exception=NSException
java.lang.Error=NSException
java.lang.RuntimeException=NSException

java.lang.Cloneable=NSCopying, protocol
Cloneable.clone=NSCopying.copy, function

java.util.Collection=NSMutableArray
java.util.List=NSMutableArray
java.util.ArrayList=NSMutableArray
java.util.Vector=NSMutableArray
java.util.Stack=NSMutableArray
List.size=NSMutableArray.count, function
List.add=NSMutableArray.addObject, function
List.get=NSMutableArray.objectAtIndex, function
List.contains=NSMutableArray.containsObject, function
List.iterator=NSMutableArray.objectEnumerator, function
List.remove=NSMutableArray.removeObject, function
List.addAll=NSMutableArray.addObjectsFromArray, function
List.removeAll=NSMutableArray.removeObjectsInArray, function
List.clear=NSMutableArray.removeAllObjects, function
List.equals=NSMutableArray.isEqualToArray, function
List.set=NSMutableArray.setObjectAtIndex, function
List.indexOf=NSMutableArray.indexOfObject, function
List.subList=NSMutableArray.subarrayWithRange, function
Vector.setElementAt=NSMutableArray.setObjectAtIndex, function
Vector.insertElementAt=NSMutableArray.insertObject, function
Vector.addElement=NSMutableArray.addObject, function
Vector.elementAt=NSMutableArray.objectAtIndex, function
Vector.lastElement=NSMutableArray.lastObject, function
Vector.removeElementAt=NSMutableArray.removeObjectAtIndex, function
Vector.removeElement=NSMutableArray.removeObject, function
Vector.removeAllElements=NSMutableArray.removeAllObjects, function
Stack.push=NSMutableArray.addObject, function
Stack.pop=NSMutableArray.removeLastObject, function
Stack.peek=NSMutableArray.lastObject, function
Stack.search=NSMutableArray.indexOfObject, function

java.util.Map=NSMutableDictionary
java.util.HashMap=NSMutableDictionary
java.util.Hashtable=NSMutableDictionary
Map.put=NSMutableDictionary.setObject, function
Map.putAll=NSMutableDictionary.addEntriesFromDictionary, function
Map.size=NSMutableDictionary.count, function
Map.get=NSMutableDictionary.objectForKey, function
Map.remove=NSMutableDictionary.removeObjectForKey, function
Map.clear=NSMutableDictionary.removeAllObjects, function
Map.keySet=NSMutableDictionary.allKeys, function
Map.values=NSMutableDictionary.allValues, function
Map.equals=NSMutableDictionary.isEqualToDictionary, function
Hashtable.elements==NSMutableDictionary.objectEnumerator, function

java.util.Iterator=NSEnumerator
java.util.Iterator.next=NSEnumerator.nextObject, function
java.util.Enumeration=NSEnumerator
java.util.Enumeration.nextElement=NSEnumerator.nextObject, function
